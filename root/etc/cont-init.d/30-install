#!/usr/bin/with-contenv bash
chmod +x /app/Rebuild-DNDC/*
echo '[---------- VARIABLES CHECK----------]'
echo
echo '[---------- DISCORD WEBHOOK ----------]'
if [ -z "$discord_url" ]
  then
  echo 'NO DISCORD WEBHOOK SUPPLIED'
  WEBHOOK=""
else
  echo 'Discord Webhook found...'
  WEBHOOK="-d $discord_url"
fi

echo '[---------- DISCORD NOTIFICATIONS----------]'
if [ -z "$discord_notifications" ]
  then
  echo 'DISCORD NOTIFICATIONS DISABLED'
  discord_notifications="no"
else
  echo 'DISCORD NOTIFICATIONS ENABLED'
  discord_notifications="yes"
fi

echo '[----------  MASTER container name ----------]'
if [ -z "$mastercontname" ]
  then
  echo 'NO MASTER CONTAINER NAME SUPPLIED - USING DEFAULT i.e. vpn'
  mastercontname='vpn'
else
  echo "MASTER container name specified = $mastercontname"
fi

echo '[---------- PING COUNT ----------]'
if [ -z "$ping_count" ]
  then
  echo 'PING COUNT NOT SET - USING DEFAULT i.e. 4'
  ping_count='4'
else
  echo "ping_count specified: $ping_count "
fi

echo '[---------- PING IP ----------]'
if [ -z "$ping_ip" ]
  then
  echo 'PING IP NOT SET - USING DEFAULT i.e. 1.1.1.1'
  ping_ip='1.1.1.1'
else
  echo "ping_ip specified: $ping_ip"
fi

echo '[---------- PING IP ALT----------]'
if [ -z "$ping_ip_alt" ]
  then
  echo 'PING IP NOT SET - USING DEFAULT i.e. 8.8.8.8'
  ping_ip_alt='8.8.8.8'
else
  echo "ping_ip_alt specified: $ping_ip_alt"
fi

echo '[---------- MASTER CONTAINER CONNECTIVITY ----------]'
if [ -z "$mastercontconcheck" ]
  then
  echo 'MASTER CONTAINER CONNECTIVITY CHECK NOT SET - USING DEFAULT i.e. yes'
  mastercontconcheck='yes'
else
  echo "mastercontconcheck specified: $mastercontconcheck"
fi

echo '[---------- SLEEP SECONDS ----------]'
if [ -z "$sleep_secs" ]
  then
  echo 'SLEEP SECONDS NOT SPECIFIED AFTER $mastercontname CONTAINER RESTART - USING DEFAULT i.e. 10'
  sleep_secs='10'
else
  echo "sleep_secs specified: $sleep_secs"
fi

echo '[---------- CRON SCHEDULE ----------]'
if [ -z "$cron" ]
  then
  echo 'NO CRON SUPPLIED - USING DEFAULT CRON OF: 5 2,11 * * *'
  CRON='5 2,11 * * *'
else
  echo "CRON set: $cron"
fi

echo '[---------- RUN AT STARTUP ----------]'
if [ "$startup" = true ] ; then
  echo 'Running at startup now'
  cd /app/Rebuild-DNDC && bash Rebuild-DNDC.sh
else
  echo 'Skipping run at startup'
fi

if [ "$discord_notifications" == "yes" ]
then
  echo '[---------- VARIABLES IN USE ----------]'
  ./discord-notify.sh \
  --webhook-url=$discord_url \
  --username "Rebuild-DNDC" \
  --avatar "https://i.imgur.com/9OFN3IJ.png" \
  --title "VARIABLES IN USE" \
  --description "- Master Container Name:- $mastercontname\n- Master Cont Con Check:- $mastercontconcheck\n- Ping IP:- $ping_ip\n- Ping IP Alt:- $ping_ip_alt\n- Ping Count:- $ping_count\n- Sleep Seconds:- $sleep_secs\n- Cron Schedule:- $cron\n- Run at Startup:- $startup\n- Appdata Folder:- $mastercontepfile_loc\n- DockerTemplate Folder:- $docker_tmpl_loc\n- ParseDockerTemplate Script:- $rundockertemplate_script" \
  --color "0x66ff33" \
  --author-icon "https://i.imgur.com/34T8oWE.png" \
  --footer-icon "https://i.imgur.com/34T8oWE.png"  &> /dev/null
  echo
fi

echo '[---------- CRON JOB SETUP ----------]'
echo "$cron   cd /app/Rebuild-DNDC && bash Rebuild-DNDC.sh " > /etc/crontabs/root
echo 'CRON Job has been set...'
echo 'Starting CRON Service now...'
crond -l 2 -f
echo